// ------------------------------------------------------------------------
// 버튼
// ------------------------------------------------------------------------

.btn {
  display: inline-block;
  position: relative;
  padding: 0.888em 0.888em 0.888em 1.333em;
  min-width: 12.4em;
  text-align: left;
  color: $white;
  background-color: transparent;
  border: 1px solid rgba($white, 1);
  font-family: $font-gothic;
  // text-transform: uppercase;
  // overflow: hidden;
  transition: all 0.34s ease-in-out;
  cursor: pointer;
  
  @include btn1-en;

  &[lang=ko] {
    @include btn1-kr;
  }

  $bpTabletMin: calc(#{$tablet} + 1px);

  &::before {
    content: attr(data-txt);
    white-space: nowrap;
    position: absolute;
    left: 1.333em;
    top: 0.888em;
    transition: all 0.34s ease-in-out;
  }

  &::after {
    content: '';
    display: inline-block;
    position: absolute;
    top: 50%;
    vertical-align: middle;
    width: 1em;
    height: 1em;
    background: url(../content/svg/d-ico-arrow.svg) no-repeat 100%;
    background-size: contain;
    right: 0.888em;
    transform: translate(0, -50%);
    transition: all 0.34s ease-in-out;
  }

  &--basic {
    padding: 0.888em;
    text-align: center;
    &::after {
      content: none;
    }

    @media (hover: hover) and (min-width: $bpTabletMin) {
      &:hover,
      &:focus {
        background-color: $white;
        color: $black;
      }
    }
  }

  &--invert {
    color: $black;
    border: 1px solid rgba($black, 0.3);
    &::after {
      background-image: url(../content/svg/d-ico-arrow--black.svg);
    }

    @media (hover: hover) and (min-width: $bpTabletMin) {
      &:hover,
      &:focus {
        background-color: $point1 !important;
        color: $white !important;
        &::after {
          background-image: url(../content/svg/d-ico-arrow.svg) !important;
        }
      }
    }
  }

  &--em {
    background-color: $white;
    color: $black;
    border: 0;
  }

  &--dynamic {
    @media (hover: hover) {
      &:hover,
      &:focus {
        
        .txt {
          opacity: 0;
        }
        &::before {
          left: 50%;
          transform: translateX(-50%);
          color: $point1;
        }
  
        &::after {
          transform: translate(150%, -50%);
          opacity: 0;
        }
      }
    }

    .txt {
      opacity: 0;
      visibility: collapse;
    }
  }

}